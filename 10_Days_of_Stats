########################################

# Day 0 - Mean, Median, Mode

con <- file('stdin', open='r')
inputs <- readLines(con)
N <- as.numeric(unlist(strsplit(inputs[1], " ")))
X <- as.numeric(unlist(strsplit(inputs[2], " ")))

mode <- function(X) {
   X <- sort(X)
   uniqv <- unique(X)
   uniqv[which.max(tabulate(match(X, uniqv)))]
}

mean <- sum(X)/N
median <- median(X)
mode <- mode(X)

cat(mean,median,mode, sep="\n")

########################################

# Day 0 - Weighted Mean

con <- file('stdin', open='r')
inputs <- readLines(con)

top <- as.numeric(unlist(strsplit(inputs[2], " ")))
dem <- as.numeric(unlist(strsplit(inputs[3], " ")))

answer <- sum(top * dem)/sum(dem)
cat(format(round(answer, 1), nsmall=1))

########################################

# Day 1 - Quartiles
con <- file('stdin', open='r')
inputs <- readLines(con)
elements <- inputs[[2]]
elements <- sort(as.numeric(unlist(strsplit(elements, " "))))

quart <- function(x) {
  x <- sort(x)
  n <- length(x)
  m <- (n+1)/2
  if (floor(m) != m) {
    l <- m-1/2; u <- m+1/2
  } else {
    l <- m-1; u <- m+1
  }
  o <- c(Q1=median(x[1:l]), median(x) ,Q3=median(x[u:n]))
return (o)
}

q <- quart(elements)

cat (q, sep="\n")

########################################

# Day 1 - Interquartile Range

con <- file('stdin', open='r')
inputs <- readLines(con)
n <- inputs[[1]]
X <- inputs[[2]]
F <- inputs[[3]]

n <- as.numeric(unlist(strsplit(n, " ")))
X <- as.numeric(unlist(strsplit(X, " ")))
F <- as.numeric(unlist(strsplit(F, " ")))

total <- c()

for (i in 1:n){
    total <- c(total, rep.int(X[i], F[i]))
}
total <- sort(total)

quart <- function(x) {
  x <- sort(x)
  n <- length(x)
  m <- (n+1)/2
  if (floor(m) != m) {
    l <- m-1/2; u <- m+1/2
  } else {
    l <- m-1; u <- m+1
  }
  o <- median(x[u:n]) - median(x[1:l])
return (o)
}

q <- format(round(quart(total), 1), nsmall=1)
cat (q)

########################################

# Day 1 - Standard Deviation

con <- file('stdin', open='r')
inputs <- readLines(con)
n <- inputs[[1]]
elements <- inputs[[2]]

data <- as.numeric(unlist(strsplit(elements, " ")))

std <- function(v){
    return (sd(v) * sqrt((length(v)-1)/length(v)))
}

cat(format(round(std(data), 1), nsmall=1))

########################################

# Day 4 - Binomial Distribution I

con <- file('stdin', open='r')
inputs <- readLines(con)
N <- as.numeric(unlist(strsplit(inputs[1], " ")))
p <- N[1] / (N[1] + N[2])
answer <- 1 - pbinom(2,6,p)
cat(round(answer, 3))

########################################

# Day 4 - Binomial Distribution II

con <- file('stdin', open='r')
inputs <- readLines(con)
N <- as.numeric(unlist(strsplit(inputs[1], " ")))
p <- N[1]/100
n <- N[2]

A1 <- round(pbinom(2,n,p),3)
A2 <- round(1 - pbinom(1,n,p), 3)
cat(A1,A2,sep="\n")

########################################

# Day 4 - Geometric Distribution I




